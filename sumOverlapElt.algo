// Solution 1 with arrays //
ALGORITHM sumOverlap_algo

VAR
    setA : ARRAY_OF INTEGER[4];
    setB : ARRAY_OF INTEGER[4];   
    i,j,cnt,sum: INTEGER := 0; 

BEGIN
    setA := {12,13,6,10}
    setB := {13,10,16,15} 
    Read(setA);
    Read(setB);

    FOR i FROM 0 to setA.length-1 STEP 1 DO
        cnt:=1;
        FOR j FROM 0 to setB.length-1 STEP 1 DO
            IF (setB[j]=setA[i]) THEN 
                cnt:=cnt + 1; 
            END_IF
        END_FOR
        IF (cnt > 1) THEN
            sum := sum + (setA[i] * cnt)
        END_IF
    END_FOR

    Write('Sum of overlapping elements in two sets equals', sum);
END


//*******************************************************************************************************************************//

// Solution 2 with HashTable //

ALGORITHM sumOverlap_algo

VAR
    setA : ARRAY_OF INTEGER[4];
    setB : ARRAY_OF INTEGER[4];   
    i,j,cnt,sum : INTEGER := 0; 
    myhash : HASH_TABLE <INTEGER,INTEGER>; 

BEGIN
    setA := {12,13,6,10}
    setB := {13,10,16,15} 
    myhash := {}
    Read(setA);
    Read(setB);
    Read(myhash);

    FOR i FROM 0 to setA.length-1 STEP 1 DO
        IF myhash.lookup(setA[i]) = TRUE THEN
            myhash.insert(setA[i], myhash.get(setA[i]) + 1);
        ELSE
            myhash.insert(setA[i], 1);
        END_IF
    END_FOR
    FOR i FROM 0 to setB.length-1 STEP 1 DO
        IF myhash.lookup(setB[i]) = TRUE THEN
            myhash.insert(setB[i], myhash.get(setB[i]) + 1);
        ELSE
            myhash.insert(setB[i], 1);
        END_IF
    END_FOR

    FOR i FROM 0 to setA.length-1 STEP 1 DO
        IF myhash.lookup(setA[i]) = TRUE AND myhash.get(setA[i]) > 1 THEN
            sum := sum + (setA[i] * myhash.get(setA[i]));
        END_IF
    END_FOR

    Write('Sum of overlapping elements in two sets equals', sum);
END